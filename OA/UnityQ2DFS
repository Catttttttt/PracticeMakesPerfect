# you can write to stdout for debugging purposes, e.g.
# print("this is a debug message")

def solution(N, A, B):
    # Implement your solution here
    graph = {}
    for a, b in zip(A, B):
        graph.setdefault(a, []).append(b)
        graph.setdefault(b, []).append(a)
    
    visited = [False] * (N + 1)
    
    def dfs(node, count):
        visited[node] = True
        count += 1
        
        if count == N:
            return True
        
        if node in graph:
            for neighbor in graph[node]:
                if not visited[neighbor] and neighbor == count + 1:
                    if dfs(neighbor, count):
                        return True
        
        visited[node] = False
        return False
    
    return dfs(1, 0)



